{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/employee/employee-details/employee-details.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/employee/employee-details/employee-details.component.css","./src/app/employee/employee-details/employee-details.component.ts","./src/app/employee/employee.action.ts","./src/app/employee/employee.reducers.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-employee-details></app-employee-details>\\r\\n\\r\\n\\r\\n\"","module.exports = \"<!--Made Use of Bootstrap4 for the Employee Form with Template Driven validation-->\\r\\n  <div class=\\\"jumbotron\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-8 offset-md-2\\\">\\r\\n                <h3>Add Employees to the NGRX store</h3>\\r\\n                <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && addNewEmployee(f)\\\" #f=\\\"ngForm\\\"  novalidate>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"id\\\">ID</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"id\\\" ngModel #id=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': id.invalid && id.touched}\\\" required />\\r\\n                        <div *ngIf=\\\"id.touched&& id.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"id.errors.required\\\">ID is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">NAME</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" ngModel #name=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': name.touched && name.invalid }\\\" required />\\r\\n                        <div *ngIf=\\\"name.touched&& name.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"name.errors.required\\\"> Name is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"address\\\">ADDRESS</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" ngModel #address=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': address.touched && address.invalid }\\\" required  />\\r\\n                        <div *ngIf=\\\"address.touched && address.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                            <div *ngIf=\\\"address.errors.required\\\">Address is required</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"department\\\">DEPARTMENT</label>\\r\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"department\\\" ngModel #department=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': department.touched && department.invalid }\\\" required  />\\r\\n                      <div *ngIf=\\\"department.touched&& department.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n                          <div *ngIf=\\\"department.errors.required\\\">Department is required</div>\\r\\n                      </div>\\r\\n                  </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button class=\\\"btn btn-primary\\\">Register</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Displaying Employee Details in the STORE-->\\r\\n<div class=\\\"container\\\">\\r\\n  <h2>Employees Details</h2>\\r\\n  <p *ngIf='employeeDetails.length===0'>No Employees Added</p>\\r\\n  <table class=\\\"table\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>ID</th>\\r\\n        <th>NAME</th>\\r\\n        <th>ADDRESS</th>\\r\\n        <th>DEPARTMENT</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let employee of employeeDetails;\\\">\\r\\n        <td>{{employee.ID}}</td>\\r\\n        <td>{{employee.name}}</td>\\r\\n        <td>{{employee.address}}</td>\\r\\n        <td>{{employee.department}}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'employee-data';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { EmployeeDetailsComponent } from '../app/employee/employee-details/employee-details.component';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { reducer } from '../app/employee/employee.reducers';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EmployeeDetailsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    StoreModule.forRoot({ employeeData: reducer }),\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2VtcGxveWVlLWRldGFpbHMvZW1wbG95ZWUtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Store , select } from '@ngrx/store';\r\nimport * as employeeActions from '../employee.action';\r\nimport { EmployeeState, Employee } from '../employee.reducers';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-employee-details',\r\n  templateUrl: './employee-details.component.html',\r\n  styleUrls: ['./employee-details.component.css']\r\n})\r\n\r\nexport class EmployeeDetailsComponent implements OnInit {\r\nemployeeDetails: Array<Employee>;\r\nemployeeDetails$: Observable<EmployeeState>;\r\n\r\n\r\n  constructor(private store: Store<{ employeeData: EmployeeState }>) {\r\n    this.employeeDetails$ = store.pipe(select('employeeData'));\r\n    // 'employeeData' is what we have added in app.module.ts to reference our Store\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    // subscribing to Employee State observable to fetch Data present in the store.\r\n    this.employeeDetails$.subscribe((val) => {\r\n      this.employeeDetails = val.EmployeeList;\r\n      console.log(this.employeeDetails);\r\n    });\r\n  }\r\n  addNewEmployee(employeedata: NgForm) {\r\n    const empData = {\r\n      ID: employeedata.controls.id.value,\r\n      name: employeedata.controls.name.value,\r\n      address: employeedata.controls.address.value,\r\n      department: employeedata.controls.department.value\r\n    };\r\n    // dispatching addEmployee action to add Employee Details in the store\r\n    this.store.dispatch(employeeActions.addEmployee({payload: empData}));\r\n    employeedata.reset();\r\n}\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\ninterface User {\r\n  ID: number;\r\n  name: string;\r\n  address: string;\r\n  department: string;\r\n}\r\n\r\nexport const addEmployee = createAction('[Employee Data] Add new Employee', props<{payload: User }>());\r\n","import { Action, createReducer, on } from '@ngrx/store';\r\nimport * as EmployeeActions from '../employee/employee.action';\r\n\r\nexport interface Employee {\r\n  ID: number;\r\n  name: string;\r\n  address: string;\r\n  department: string;\r\n}\r\n\r\nexport interface EmployeeState {\r\n  EmployeeList: Array<Employee>;\r\n}\r\n\r\n\r\nexport const initializeState = (): EmployeeState => {\r\n  return { EmployeeList: Array<Employee>() };\r\n};\r\n\r\nexport const initialState = initializeState();\r\n\r\nconst employeeReducer = createReducer(\r\n    initialState,\r\n    on(EmployeeActions.addEmployee, (state: EmployeeState, {payload}) => {\r\n      return { ...state, EmployeeList: [...state.EmployeeList, payload] };\r\n    })\r\n  );\r\n\r\nexport function reducer(state: EmployeeState | undefined, action: Action) {\r\n  return employeeReducer(state, action);\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}